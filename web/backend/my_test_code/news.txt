- 지민이가 하얀색 검은색으로 칠해져있는 M * N 크기의 보드를 체스판으로 만드는 문제

- HJ 님 문제 푸는데 2일걸림

- 처음에 문제를 잘못읽어서 어떤 판이든 간에 블랙 & 화이트로 바꾸고 카운트 하는 문제인줄 알음

- 하지만 matrix를 8 * 8로 나눠서 색깔을 찾는 문제였음

- 이후 접근을 matrix를 나누고 sum 해주는 함수를 이용하여 해결했음


​

백준 2108번 _'통계학'




- 통계학에 사용되는 [산술평균, 중앙값, 최빈값, 범위] 4개의 기능을 구현하는 문제

1. 산술평균 : N개의 수들의 합을 N으로 나눈 값

2. 중앙값 : N개의 수들을 증가하는 순서로 나열했을 경우 그 중앙에 위치하는 값

3. 최빈값 : N개의 수들 중 가장 많이 나타나는 값

4. 범위 : N개의 수들 중 최댓값과 최솟값의 차이

- 첫째자리에서 반올림하는 케이스 : round함수 이용해서 해결

- merge sort(합병 정렬)를 압축시키는 코드를 알게되었음

- 다른 정의를 하나 세워서 잘 적용시키면 합병정렬을 적용하지 않아도 풀수가 있음

- 중앙값은 mergesort를 이용해 해결함

- 최빈값은 딕셔너리를 만들고 key 에는 숫자, value는 카운트값이 들어가고 max_cnt 카운트 list로 최대값을 넣어줌

​
SH 님 발표

백준 2108번 _'통계학'



- 통계학에 사용되는 [산술평균, 중앙값, 최빈값, 범위] 4개의 기능을 구현하는 문제

- 이전 발표자인 HJ 님과 같은 문제이지만 다른 풀이로 이어서 발표를 진행

- 둘다 같은 딕셔너리를 사용했지만 SH 님은 카운트를 사용해서 for문을 돌아가면서 몇개있는지 딕셔너리에 넣었음

- but. 시간복잡도가 높아졌음 ⬆

- 시간 초과로 인정이 안됨 

- Collection 패키지의 Counter를 import 해서 위의 문제 해결

- mostcommon 옴션을 사용해서 가장 빈도수가 높은것 부터 해서 해당갯수만큼 할당시킴

- 느낀점 : count 함수가 시간복잡도가 높다는 것을 깨달았음
